<?xml version="1.0" encoding="UTF-8"?>
<!--
~ Copyright (c) 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
~
~ WSO2 Inc. licenses this file to you under the Apache License,
~ Version 2.0 (the "License"); you may not use this file except
~ in compliance with the License.
~ You may obtain a copy of the License at
~
~ http://www.apache.org/licenses/LICENSE-2.0
~
~ Unless required by applicable law or agreed to in writing,
~ software distributed under the License is distributed on an
~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~ KIND, either express or implied. See the License for the
~ specific language governing permissions and limitations
~ under the License.
-->
<template name="searchSlideshows" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="q" description="Query string"/>
    <parameter name="page" description="The page number of the results"/>
    <parameter name="itemsPerPage" description="Number of results to return per page"/>
    <parameter name="lang" description="Language of slideshows"/>
    <parameter name="sort" description="Sort order"/>
    <parameter name="uploadDate" description="The time period you want to restrict your search"/>
    <parameter name="what" description="What type of search"/>
    <parameter name="download" description="Slideshows that are available to download"/>
    <parameter name="fileFormat" description="File extension to search on"/>
    <parameter name="fileType" description="File type to search for"/>
    <parameter name="cc" description="Set value under the Creative Commons"/>
    <parameter name="ccAdapt" description="Allow adaption under the Creative Commons"/>
    <parameter name="ccCommercial" description="Set value with the commercial Creative Commons license."/>
    <parameter name="detailed" description="Whether or not to include optional information"/>
    <sequence>
        <property name="uri.var.q" expression="$func:q"/>
        <property name="uri.var.page" expression="$func:page"/>
        <property name="uri.var.itemsPerPage" expression="$func:itemsPerPage"/>
        <property name="uri.var.lang" expression="$func:lang"/>
        <property name="uri.var.sort" expression="$func:sort"/>
        <property name="uri.var.uploadDate" expression="$func:uploadDate"/>
        <property name="uri.var.what" expression="$func:what"/>
        <property name="uri.var.download" expression="$func:download"/>
        <property name="uri.var.fileFormat" expression="$func:fileFormat"/>
        <property name="uri.var.fileType" expression="$func:fileType"/>
        <property name="uri.var.cc" expression="$func:cc"/>
        <property name="uri.var.ccAdapt" expression="$func:ccAdapt"/>
        <property name="uri.var.ccCommercial" expression="$func:ccCommercial"/>
        <property name="uri.var.detailed" expression="$func:detailed"/>
        <filter
                xpath="(not(get-property('uri.var.page') = '' or  (not(string(get-property('uri.var.page'))))))">
            <then>
                <property name="uri.var.optionalParams"
                          expression="fn:concat(get-property('uri.var.optionalParams'),'&amp;page=',get-property('uri.var.page'))"/>
            </then>
        </filter>
        <filter
                xpath="(not(get-property('uri.var.itemsPerPage') = '' or  (not(string(get-property('uri.var.itemsPerPage'))))))">
            <then>
                <property name="uri.var.optionalParams"
                          expression="fn:concat(get-property('uri.var.optionalParams'),'&amp;items_per_page=',get-property('uri.var.itemsPerPage'))"/>
            </then>
        </filter>
        <filter
                xpath="(not(get-property('uri.var.lang') = '' or  (not(string(get-property('uri.var.lang'))))))">
            <then>
                <property name="uri.var.optionalParams"
                          expression="fn:concat(get-property('uri.var.optionalParams'),'&amp;lang=',get-property('uri.var.lang'))"/>
            </then>
        </filter>
        <filter
                xpath="(not(get-property('uri.var.sort') = '' or  (not(string(get-property('uri.var.sort'))))))">
            <then>
                <property name="uri.var.optionalParams"
                          expression="fn:concat(get-property('uri.var.optionalParams'),'&amp;sort=',get-property('uri.var.sort'))"/>
            </then>
        </filter>
        <filter
                xpath="(not(get-property('uri.var.uploadDate') = '' or  (not(string(get-property('uri.var.uploadDate'))))))">
            <then>
                <property name="uri.var.optionalParams"
                          expression="fn:concat(get-property('uri.var.optionalParams'),'&amp;upload_date=',get-property('uri.var.uploadDate'))"/>
            </then>
        </filter>
        <filter
                xpath="(not(get-property('uri.var.what') = '' or  (not(string(get-property('uri.var.what'))))))">
            <then>
                <property name="uri.var.optionalParams"
                          expression="fn:concat(get-property('uri.var.optionalParams'),'&amp;what=',get-property('uri.var.what'))"/>
            </then>
        </filter>
        <filter
                xpath="(not(get-property('uri.var.download') = '' or  (not(string(get-property('uri.var.download'))))))">
            <then>
                <property name="uri.var.optionalParams"
                          expression="fn:concat(get-property('uri.var.optionalParams'),'&amp;lang=',get-property('uri.var.download'))"/>
            </then>
        </filter>
        <filter
                xpath="(not(get-property('uri.var.fileFormat') = '' or  (not(string(get-property('uri.var.fileFormat'))))))">
            <then>
                <property name="uri.var.optionalParams"
                          expression="fn:concat(get-property('uri.var.optionalParams'),'&amp;fileformat=',get-property('uri.var.fileFormat'))"/>
            </then>
        </filter>
        <filter
                xpath="(not(get-property('uri.var.fileType') = '' or  (not(string(get-property('uri.var.fileType'))))))">
            <then>
                <property name="uri.var.optionalParams"
                          expression="fn:concat(get-property('uri.var.optionalParams'),'&amp;file_type=',get-property('uri.var.fileType'))"/>
            </then>
        </filter>
        <filter
                xpath="(not(get-property('uri.var.cc') = '' or  (not(string(get-property('uri.var.cc'))))))">
            <then>
                <property name="uri.var.optionalParams"
                          expression="fn:concat(get-property('uri.var.optionalParams'),'&amp;cc=',get-property('uri.var.cc'))"/>
            </then>
        </filter>
        <filter
                xpath="(not(get-property('uri.var.ccAdapt') = '' or  (not(string(get-property('uri.var.ccAdapt'))))))">
            <then>
                <property name="uri.var.optionalParams"
                          expression="fn:concat(get-property('uri.var.optionalParams'),'&amp;cc_adapt=',get-property('uri.var.ccAdapt'))"/>
            </then>
        </filter>
        <filter
                xpath="(not(get-property('uri.var.ccCommercial') = '' or  (not(string(get-property('uri.var.ccCommercial'))))))">
            <then>
                <property name="uri.var.optionalParams"
                          expression="fn:concat(get-property('uri.var.optionalParams'),'&amp;cc_commercial=',get-property('uri.var.ccCommercial'))"/>
            </then>
        </filter>
        <filter
                xpath="(not(get-property('uri.var.detailed') = '' or  (not(string(get-property('uri.var.detailed'))))))">
            <then>
                <property name="uri.var.optionalParams"
                          expression="fn:concat(get-property('uri.var.optionalParams'),'&amp;detailed=',get-property('uri.var.detailed'))"/>
            </then>
        </filter>
        <property name="POST_TO_URI" value="true" scope="axis2" type="STRING"/>
        <call>
            <endpoint>
                <http method="get"
                      uri-template="{uri.var.apiUrl}/search_slideshows?{uri.var.requiredParameters}&amp;q={uri.var.q}{uri.var.optionalParams}"/>
            </endpoint>
        </call>
    </sequence>
</template>